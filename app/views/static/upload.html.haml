-if output_link
	%ul#output
		%li.source.clearfix
			%dl
				%dt Source:
				%dd= resource_link
		%li.link.last.clearfix
			%dl
				%dt Link:
				%dd= output_link

%blockquote.callout
	%i &ldquo;
	=uploader_callouts

/ rebuild inputs here by hand.

- form_tag('/upload', :id => 'resource_transloader') do
	- field_set_tag do
		= label_tag 'resource_', 'From The Web:'
		= text_field 'resource', '', {:value => ""}
		= submit_tag("Yank Resource")

- form_tag('/upload', :id => 'file_uploader', :multipart => true) do
	- field_set_tag do
		= label_tag 'resource', 'From Your PC:'
		= file_field_tag 'resource'
		= submit_tag("Upload From PC")

:javascript
	inputs();
	init();
	buttons();

	jQuery.validator.addMethod('domain', function(value,element) {
		return this.optional(element) || /^(http|https):\/\//.test(value)
	}, "Please enter a valid resource name <br/><small>(starting with 'http')</small>");

	$('#resource_transloader').validate({
		rules: {
			'resource[]': { required: true, domain: true }
		}
	});

	$('#file_uploader').validate({
		rules: {
			'resource' : { required: true }
		}
	});

	function init() {
			$('form').first().find('input[type="text"]').val('...');
			$('form').not(':first').addClass('inactive');
	}

	function inputs() {
		var $input = $('input[name^="resource"]');
		$input.focus(function(){
			$(this).val() == "..." ? $(this).val('') : $(this).val() = $(this).val()
		});
		$input.blur(function(){
			$(this).val() == '' ? $(this).val("...") : $(this).val() = $(this).val()
		});
	}

	function buttons() {
		$('input[type="submit"]').mousedown(function(){
			$(this).addClass('down');
		});
		$('input[type="submit"]').mouseup(function(){
			$(this).removeClass('down');
		});
		$('input[type="submit"]').mouseleave(function(){
			$(this).removeClass('down');
		});
	}

/ could add terms of use/manifesto here
